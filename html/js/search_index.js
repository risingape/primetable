var search_data = {"index":{"searchIndex":["primeapp","primetable","primetable","colour","decorator","dummygenerator","dummygenerator2","erastosthenes","headings","primegenerator","table","tensorproduct","primetable","first()","first()","first()","first()","geta()","getb()","new()","new()","product()","product()","product()","product()","product()","readme"],"longSearchIndex":["primeapp","primeapp::primetable","primetable","primetable::colour","primetable::decorator","primetable::dummygenerator","primetable::dummygenerator2","primetable::erastosthenes","primetable::headings","primetable::primegenerator","primetable::table","primetable::tensorproduct","primetable","primetable::dummygenerator#first()","primetable::dummygenerator2#first()","primetable::erastosthenes#first()","primetable::primegenerator::first()","primetable::tensorproduct#geta()","primetable::tensorproduct#getb()","primetable::decorator::new()","primetable::tensorproduct::new()","primetable::colour#product()","primetable::decorator#product()","primetable::headings#product()","primetable::table#product()","primetable::tensorproduct#product()",""],"info":[["PrimeApp","","PrimeApp.html","","\n<pre>= Summary</pre>\n<p><code>primeApp</code> is a simple command line application to compute and\ndisplay\n\n<pre>the multiplication table ...</pre>\n"],["PrimeApp::Primetable","","PrimeApp/Primetable.html","",""],["PrimeTable","","PrimeTable.html","",""],["PrimeTable::Colour","","PrimeTable/Colour.html","",""],["PrimeTable::Decorator","","PrimeTable/Decorator.html","","<p><code>PrimeTable::Decorator</code> \"abstract\" base class implementing the\n[Decorator pattern](http://en.wikipedia.org/wiki/Decorator_pattern ...\n"],["PrimeTable::DummyGenerator","","PrimeTable/DummyGenerator.html","","<p>Empty class to test the reflection based instantiation by name.\n"],["PrimeTable::DummyGenerator2","","PrimeTable/DummyGenerator2.html","","<p>Empty class to test the reflection based instantiation by name.\n"],["PrimeTable::Erastosthenes","","PrimeTable/Erastosthenes.html","","<p>PrimeTable::Erastosthenes implements the [Sieve of\nErastosthenes](en.wikipedia.org/wiki/Sieve_of_Erastosthenes …\n"],["PrimeTable::Headings","","PrimeTable/Headings.html","",""],["PrimeTable::PrimeGenerator","","PrimeTable/PrimeGenerator.html","","<p>PrimeTable::PrimeGenerator generates the first n primes. It encapsulates\nthe actual prime number generation …\n"],["PrimeTable::Table","","PrimeTable/Table.html","",""],["PrimeTable::TensorProduct","","PrimeTable/TensorProduct.html","","<p>class members: vectorA defines the rows vectorB defines the columns\ntensorProduct = vectorA vectorB^T …\n"],["Primetable","","Primetable.html","",""],["first","PrimeTable::DummyGenerator","PrimeTable/DummyGenerator.html#method-i-first","(n)","<p>Generates the first <code>n</code> prime numbers. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PrimeTable</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">DummyGenerator</span>.<span class=\"ruby-identifier\">first</span>(<span class=\"ruby-value\">4</span>)\n<span class=\"ruby-comment\"># =&gt; [2,3,5,7]</span>\n</pre>\n"],["first","PrimeTable::DummyGenerator2","PrimeTable/DummyGenerator2.html#method-i-first","(n)","<p>Generates the first <code>n</code> prime numbers. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PrimeTable</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">DummyGenerator2</span>.<span class=\"ruby-identifier\">first</span>(<span class=\"ruby-value\">4</span>)\n<span class=\"ruby-comment\"># =&gt; [2,3,5,7]</span>\n</pre>\n"],["first","PrimeTable::Erastosthenes","PrimeTable/Erastosthenes.html#method-i-first","(n)","<p>Generates the first <code>n</code> prime numbers by calling a native C\nextension. For example:\n\n<pre>PrimeTable::Erastosthenes.first(4) ...</pre>\n"],["first","PrimeTable::PrimeGenerator","PrimeTable/PrimeGenerator.html#method-c-first","(n, generatorString=\"Erastosthenes\" )","<p>Generates the first <code>n</code> prime numbers. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PrimeTable</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PrimeGenerator</span>.<span class=\"ruby-identifier\">first</span>(<span class=\"ruby-value\">4</span>)\n<span class=\"ruby-comment\"># =&gt; [2,3,5,7]</span>\n</pre>\n<p>Instanciate …\n"],["geta","PrimeTable::TensorProduct","PrimeTable/TensorProduct.html#method-i-geta","()",""],["getb","PrimeTable::TensorProduct","PrimeTable/TensorProduct.html#method-i-getb","()",""],["new","PrimeTable::Decorator","PrimeTable/Decorator.html#method-c-new","(component)","<p>The core of the Decorator Pattern is to forward the\n"],["new","PrimeTable::TensorProduct","PrimeTable/TensorProduct.html#method-c-new","(vectorA, vectorB = vectorA)",""],["product","PrimeTable::Colour","PrimeTable/Colour.html#method-i-product","()",""],["product","PrimeTable::Decorator","PrimeTable/Decorator.html#method-i-product","()","<p>Compute the multiplication table. <code>Decorator#product</code> raises\n<code>NotImplementedError</code>\n"],["product","PrimeTable::Headings","PrimeTable/Headings.html#method-i-product","()",""],["product","PrimeTable::Table","PrimeTable/Table.html#method-i-product","()",""],["product","PrimeTable::TensorProduct","PrimeTable/TensorProduct.html#method-i-product","()",""],["README","","README_rdoc.html","","<p>primetable - prime number multiplication table\n<p>Author &mdash; Guido Klingbeil\n<p>Copyright &mdash; Copyright © 2013 Guido …\n"]]}}